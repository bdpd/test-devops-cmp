---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      instance_type: t2.micro
      security_group: cmp-devops
      image: ami-4b133c5d
      keypair: bdpd.pem
      region: us-east-1
      count: 1
      instance_name: cpm-devops


    # Task that will be used to Launch/Create an EC2 Instance
    tasks:
      - name: Create IAM role with custom trust relationship
        iam:
          iam_type: role
          name: iam-role
          state: present

      - name: Create and attach IAM policy to IAM role
        iam_policy:
          iam_type: role
          iam_name: iam-role
          policy_name: full-access
          state: present
          policy_document: "files/ec2-dynamo.json"

      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for webserver Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall

      - name: Launch the new EC2 Instance
        ec2:
          group: "{{ security_group }}"
          instance_type: "{{ instance_type}}"
          image: "{{ image }}"
          wait: true
          region: "{{ region }}"
          keypair: "{{ keypair }}"
          count: "{{count}}"
          instance_profile_name: iam-role
          instance_tags:
            Name: "{{ instance_name }}"
        register: ec2


      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile
                      dest="./hosts"
                      regexp="{{ item.public_ip }}"
                      insertafter="[webserver]" line="{{ item.public_ip }}"
        with_items: "{{ ec2.instances }}"


      - name: Wait for SSH to come up
        local_action: wait_for 
                      host="{{ item.public_ip }}"
                      port=22
                      state=started
        with_items: "{{ ec2.instances }}"







